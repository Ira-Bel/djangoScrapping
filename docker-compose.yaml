version: "3.9"


services:


  postgres_db:

    image: postgres:15.2
    env_file:
      - .env

    environment:
      POSTGRES_DB: DB_NAME
      POSTGRES_USER: DB_USER
      POSTGRES_PASSWORD: DB_PASSWORD
    volumes:
      - ./pg_data:/var/lib/postgresql/data


    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U userIra -d parser" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
        resources:
          limits:
            cpus: '1'
            memory: 4G


  redis:
    image: redis:6.0


  web-server:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./static:/var/www/static:ro"

    depends_on:
      - django-parser1
      - django-parser2

  scrapping-init:
    build: .
    image: parser:v0.1
    env_file:
      - .env
    environment:
      DJANGO_SUPERUSER_EMAIL: djangoProjectUser@yandex.ru
      DJANGO_SUPERUSER_NAME: ira
      DJANGO_SUPERUSER_PASSWORD: 1111

    command: python manage.py migrate && python manage.py createsuperuser --noinput
    depends_on:
      postgres_db:
        condition: service_healthy

  #BACKEND for parser1
  django-parser1: &backend
    image: parser:v0.1
    command: python manage.py runserver 0.0.0.0:8000
    restart: on-failure
    env_file:
      - .env

    depends_on:
      - scrapping-init

    volumes:
      - "./media:/my_app/media"

  #BACKEND for parser2
  django-parser2:
    <<: *backend

  celery:
    <<: *backend
    command: celery -A djangoScrapping worker -l info
    depends_on:
      - redis
